{"version":3,"sources":["App.js","index.js"],"names":["App","useState","city","setCity","weatherForecast","setWeatherForecast","isLoading","setIsLoading","className","href","id","type","value","onChange","event","target","onClick","fetch","process","then","response","status","json","alert","data","src","current","condition","icon","alt","text","temp_c","location","name","region","feelslike_c","gust_kph","humidity","uv","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KA+GeA,MA7Gf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA8CF,mBAAS,MAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KA2BA,OACE,gCACE,qBAAKC,UAAU,mDAAf,SACE,mBAAGA,UAAU,eAAeC,KAAK,UAAjC,4BAIF,sBAAMD,UAAU,YAAYE,GAAG,SAA/B,SACE,sBAAKF,UAAU,YAAf,UACE,uFACA,mBAAGA,UAAU,OAAb,mFAIA,qBAAKA,UAAU,OAAf,SACE,8BACE,uBACEG,KAAK,OACLH,UAAU,eACVI,MAAOV,EACPW,SAxBW,SAACC,GACxBX,EAAQW,EAAMC,OAAOH,cA2Bf,wBACEJ,UAAU,yBACVQ,QAnDoB,WAC5BT,GAAa,GACbU,MAAM,GAAD,OACAC,gCADA,4BACkDA,kCADlD,cACiFhB,EADjF,aAGFiB,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,OACX,OAAOD,EAASE,OAEM,MAApBF,EAASC,QACXE,MAAM,0DAITJ,MAAK,SAACK,GACLnB,EAAmBmB,GACnBjB,GAAa,GACbJ,EAAQ,SAgCN,SAIGG,EAAY,iBAAmB,cAEjCF,EACC,sBAAKI,UAAU,+BAAf,UACE,8BACE,qBACEiB,IAAKrB,EAAgBsB,QAAQC,UAAUC,KACvCC,IAAI,mBAGR,gCACE,+BACGzB,EAAgBsB,QAAQC,UAAUG,KADrC,IAC4C,IACzC1B,EAAgBsB,QAAQK,OAF3B,YAIA,mBAAGvB,UAAU,OAAb,SACE,8CAAiBJ,EAAgB4B,SAASC,UAE5C,mBAAGzB,UAAU,OAAb,SACE,8CAAiBJ,EAAgB4B,SAASE,YAE5C,mBAAG1B,UAAU,OAAb,SACE,oEACwBJ,EAAgBsB,QAAQS,YADhD,SAEI,SAGN,mBAAG3B,UAAU,OAAb,SACE,2DACwBJ,EAAgBsB,QAAQU,SADhD,aAIF,mBAAG5B,UAAU,OAAb,SACE,yDACsBJ,EAAgBsB,QAAQW,SAD9C,SAIF,mBAAG7B,UAAU,OAAb,SACE,wDAAwBJ,EAAgBsB,QAAQY,cAIpD,cCpGdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.05da4bdf.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n\n  const [weatherForecast, setWeatherForecast] = useState(null);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const searchForecastWeather = () => {\n    setIsLoading(true);\n    fetch(\n      `${process.env.REACT_APP_BASE_URL}current.json?key=${process.env.REACT_APP_KEY}&q=${city}&lang=pt`\n    )\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        if (response.status !== 200) {\n          alert(\"Erro! Verique os dados digitados e tente novamente.\");\n        }\n      })\n\n      .then((data) => {\n        setWeatherForecast(data);\n        setIsLoading(false);\n        setCity(\" \");\n      });\n  };\n\n  const handleCityChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n        <a className=\"navbar-brand\" href=\"#search\">\n          EBAC Weather\n        </a>\n      </nav>\n      <main className=\"container\" id=\"search\">\n        <div className=\"jumbotron\">\n          <h1>Verifique agora a previsão do tempo na sua cidade!</h1>\n          <p className=\"lead\">\n            Digite a sua cidade no campo abaixo e em seguida clique em\n            pesquisar.\n          </p>\n          <div className=\"mb-4\">\n            <div>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={city}\n                onChange={handleCityChange}\n              />\n            </div>\n          </div>\n          <button\n            className=\"btn btn-lg btn-primary\"\n            onClick={searchForecastWeather}\n          >\n            {isLoading ? \"Pesquisando...\" : \"Pesquisar\"}\n          </button>\n          {weatherForecast ? (\n            <div className=\"mt-4 d-flex align-items-self\">\n              <div>\n                <img\n                  src={weatherForecast.current.condition.icon}\n                  alt=\"Weather Icon\"\n                />\n              </div>\n              <div>\n                <h3>\n                  {weatherForecast.current.condition.text}:{\" \"}\n                  {weatherForecast.current.temp_c}º C\n                </h3>\n                <p className=\"lead\">\n                  <strong>Cidade: {weatherForecast.location.name}</strong>\n                </p>\n                <p className=\"lead\">\n                  <strong>Estado: {weatherForecast.location.region}</strong>\n                </p>\n                <p className=\"lead\">\n                  <strong>\n                    Sensação Térmica de: {weatherForecast.current.feelslike_c}º\n                    C{\" \"}\n                  </strong>\n                </p>\n                <p className=\"lead\">\n                  <strong>\n                    Velocidade do Vento: {weatherForecast.current.gust_kph} km/h\n                  </strong>\n                </p>\n                <p className=\"lead\">\n                  <strong>\n                    Humidade Relativa: {weatherForecast.current.humidity}%\n                  </strong>\n                </p>\n                <p className=\"lead\">\n                  <strong>Incidência UV: {weatherForecast.current.uv}</strong>\n                </p>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}